version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6

executors:
  cloud-stream-executor:
    docker:
      - image: cimg/openjdk:17.0
    resource_class: medium
    environment:
      JVM_OPTS: -Xmx3g

jobs:
  clone-repository:
    executor: cloud-stream-executor
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - backend
            - frontend

  backend-build-artefacts:
    executor: cloud-stream-executor
    steps:
      - restore_cache:
          keys:
            - maven-dependencies-repository
      - attach_workspace:
          at: ./
      - run:
          name: Building backend
          command: mvn install -f backend/pom.xml
      - persist_to_workspace:
          root: .
          paths:
            - backend
            - frontend
      - save_cache:
          paths:
            - .m2
          key: maven-dependencies-repository

  backend-build-container-image:
    executor: cloud-stream-executor
    parameters:
      microservice-module-name:
        type: string
    steps:
      - restore_cache:
          keys:
            - maven-dependencies-repository
      - attach_workspace:
          at: ./
      - setup_remote_docker
      - run:
          name: Running << parameters.microservice-module-name >>
          command: mvn spring-boot:build-image -f backend/<< parameters.microservice-module-name >>/pom.xml
      - run:
          name: Docker images
          command: docker image ls -a
      - save_cache:
          paths:
            - .m2
          key: maven-dependencies-repository

workflows:
  release-pipeline:
    jobs:
      - clone-repository:
          filters:
            branches:
              only: master
      - backend-build-artefacts:
          requires:
            - clone-repository
#      - backend-build-container-image:
#          requires:
#            - backend-build-artefacts
#          microservice-module-name: cloud-stream-api-user
#      - backend-build-container-image:
#          requires:
#            - backend-build-artefacts
#          microservice-module-name: cloud-stream-api-storage
#      - backend-build-container-image:
#          requires:
#            - backend-build-artefacts
#          microservice-module-name: cloud-stream-api-stream
      - backend-build-container-image:
          requires:
            - backend-build-artefacts
          microservice-module-name: cloud-stream-api-download